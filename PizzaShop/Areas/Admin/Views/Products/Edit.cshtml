@model PizzaShop.Models.Catalog.Product

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>Edit</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Product</legend>

        @Html.HiddenFor(model => model.ProductId)

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Price)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Price)
            @Html.ValidationMessageFor(model => model.Price)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Costs)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Costs)
            @Html.ValidationMessageFor(model => model.Costs)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Weight)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Weight)
            @Html.ValidationMessageFor(model => model.Weight)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Category)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.CategoryId, ViewData["categories"] as SelectList)
            @Html.ValidationMessageFor(model => model.CategoryId)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Description.Text)
            @Html.ValidationMessageFor(model => model.Description.Text)
        </div>
        <h3>Images</h3>

        @foreach (var image in Model.Images)
        {
            <img src="@Url.Content(image.Url)" title="@image.Title" height="50", width="50" />
        }
        @Html.ActionLink("Edit Images", "EditProductImages", new {id = Model.ProductId})

        <h3>Options</h3>

        <table>
        <tr>
        <th>
            Name
        </th>
        <th>
            Values           
        </th>
        <th>
            Edit
        </th>
        <th>
            Delete
        </th>
    </tr>
    @for (int i =0; i<Model.Options.Count(); i++)
    {
    <tr>
        <td>
        @Html.DisplayFor(model => Model.Options[i].Name)
        </td>
        <td>
        @Model.Options[i].Values.Count()  
        </td>
        <td>
        @Html.ActionLink("Edit", "EditProductOption", new { id = Model.Options[i].ProductOptionId }) 
        </td>
        <td>
        @Html.ActionLink("Delete","DeleteProductOption",new {id = Model.Options[i].ProductOptionId})
        </td>

    </tr>
    }
    </table>
        @Html.ActionLink("Add New Option", "AddProductOption", new { id = Model.ProductId })
        

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
